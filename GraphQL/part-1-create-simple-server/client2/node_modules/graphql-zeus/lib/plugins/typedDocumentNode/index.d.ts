export declare const pluginTypedDocumentNode = "import { TypedDocumentNode } from '@graphql-typed-document-node/core';\nimport gql from 'graphql-tag';\nimport {\n  ValueTypes,\n  GenericOperation,\n  OperationOptions,\n  GraphQLTypes,\n  InputType,\n  ScalarDefinition,\n  ThunderGraphQLOptions,\n  Zeus,\n  ExtractVariables,\n} from './';\nimport { Ops } from './const';\n\nexport const typedGql =\n  <O extends keyof typeof Ops, SCLR extends ScalarDefinition, R extends keyof ValueTypes = GenericOperation<O>>(\n    operation: O,\n    graphqlOptions?: ThunderGraphQLOptions<SCLR>,\n  ) =>\n  <Z extends ValueTypes[R]>(o: (Z & ValueTypes[R]) | ValueTypes[R], ops?: OperationOptions) => {\n    const str = Zeus(operation, o, {\n      operationOptions: ops,\n      scalars: graphqlOptions?.scalars,\n    });\n    return gql(str) as TypedDocumentNode<InputType<GraphQLTypes[R], Z, SCLR>, ExtractVariables<Z>>;\n  };\n";
