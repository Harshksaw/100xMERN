import { ParserTree } from 'graphql-js-tree';
import { Environment } from '../Models';
export interface OperationName {
    name: string;
    type: 'operation';
}
export interface ResolvedOperations {
    query: OperationDetails;
    mutation: OperationDetails;
    subscription: OperationDetails;
}
export interface OperationDetails {
    operationName?: OperationName;
    operations: string[];
}
export interface ResolveOptions {
    tree: ParserTree;
    env?: Environment;
    host?: string;
    headers?: Record<string, string>;
    esModule?: boolean;
    subscriptions?: 'legacy' | 'graphql-ws';
}
export declare class TreeToTS {
    static resolveBasisHeader(): string;
    static resolveBasisCode(tree: ParserTree): string;
    static resolveBasisTypes(tree: ParserTree): string;
    static resolveTreeSplit({ tree, env, host, esModule, headers, subscriptions, }: ResolveOptions): {
        indexImports: string;
        const: string;
        index: string;
    };
    static resolveTree(options: ResolveOptions): string;
}
