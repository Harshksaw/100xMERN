import { InputValueType, Operations, ReturnTypesType, VType } from "./models";
import { ScalarResolver } from "./types";
export declare const decodeScalarsInResponse: <O extends Operations>({ response, scalars, returns, ops, initialZeusQuery, initialOp, }: {
    ops: O;
    response: any;
    returns: ReturnTypesType;
    scalars?: Record<string, ScalarResolver | undefined> | undefined;
    initialOp: keyof O;
    initialZeusQuery: InputValueType | VType;
}) => any;
export declare const traverseResponse: ({ resolvers, scalarPaths, }: {
    scalarPaths: {
        [x: string]: `scalar.${string}`;
    };
    resolvers: {
        [x: string]: ScalarResolver | undefined;
    };
}) => (k: string, o: InputValueType | VType, p?: string[]) => unknown;
